{"version":3,"sources":["./src/app/register/register.component.ts","./src/app/register/register.component.html","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/app/Services/user.service.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/resetpwd/resetpwd.component.ts","./src/app/resetpwd/resetpwd.component.html","./src/app/Services/jsonplaceholder.service.ts","./src/app/Services/observice.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/Services/auth.service.ts","./src/app/app.module.ts","./src/app/models/user.models.ts","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { User } from '../models/user.models';\nimport { CommonModule } from '@angular/common';\nimport { UserService } from '../Services/user.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})\nexport class RegisterComponent implements OnInit {\n  public user: User;\n  userForm: FormGroup;\n  constructor(private formbuilder: FormBuilder , private usersevice:UserService, private router:Router) { }\n\n  ngOnInit(): void {\n    this.initform();\n  }\n  initform() {\n    this.userForm = this.formbuilder.group({\n      username:['', Validators.required],\n      pwd: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n\n    });\n  }\n  onSubmitForm() {\n    const formValue = this.userForm.value;\n    const newUser = new User(\n      formValue['username'],\n      formValue['email'],\n\n      formValue['pwd'],\n\n    );\n    console.log(newUser);\n    this.usersevice.addUser(newUser);\n  }\n  onRegister(){\n    this.onSubmitForm()\n    this.router.navigate(['Home']);\n  }\n  \n}\n","<div class=\"row\">\n    <div class=\"col-md-6 offset-md-3 mt-4\">\n        <h3>Register New Employer</h3>\n        <form [formGroup]=\"userForm\">\n            <div class=\"form-group\">\n                <label for=\"registerUsername\">Username</label>\n                <input type=\"text\" class=\"form-control\" ngModel name=\"username\"placeholder=\"Enter username\" formControlName=\"username\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"registerEmail\">Email</label>\n                <input type=\"email\" class=\"form-control\" ngModel name=\"email\" placeholder=\"Enter email\"formControlName=\"email\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"registerPassword\">Password</label>\n                <input type=\"password\" class=\"form-control\" ngModel name=\"pwd\" placeholder=\"Password\" formControlName=\"pwd\">\n            </div>\n            <button type=\"button\" class=\"btn btn-primary\"[disabled]=\"userForm.invalid\"(click)=\"onRegister()\">Register</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { JsonplaceholderService } from '../Services/jsonplaceholder.service';\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n  data : Array<any>\n  constructor(private JSONPlacehoderService:JsonplaceholderService) { \n    this.data=new Array<any>();\n  }\n\n  ngOnInit(): void {\n    this.getdatafromapi();\n  }\n  getdatafromapi(){\n    this.JSONPlacehoderService.getdata().subscribe((data)=>{\n      console.log(data);\n      this.data=data;\n    })\n  }\n\n}\n","<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th scope=\"col\">id</th>\n            <th scope=\"col\">name</th>\n            <th scope=\"col\">username</th>\n            <th scope=\"col\">email</th>\n        </tr>\n    </thead>\n    <tbody *ngFor=\"let d of data\">\n        <tr>\n            <th scope=\"row\">{{d.id}}</th>\n            <td>{{d.name}}</td>\n            <td>{{d.username}}</td>\n            <td>{{d.email}}</td>\n        </tr>\n    </tbody>\n</table>","\r\nimport { Injectable } from '@angular/core';\r\nimport { EmailValidator } from '@angular/forms';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { User } from '../models/user.models';\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  public users: User[] = [\r\n    {\r\n      username: 'aminebayouli',\r\n      email: 'amine@gmail.com',\r\n      pwd: 'a1234',\r\n    },\r\n    {\r\n      username: 'bayouliamine',\r\n      email: 'bayouli@gmail.com',\r\n      pwd: 'a12356',\r\n    }\r\n  ];\r\n  data:Observable<User>\r\n \r\n\r\n  addUser(user: User) {\r\n    this.users.push(user);\r\n   \r\n  }\r\n \r\n}","import { Component, OnInit } from '@angular/core';\nimport { ObserviceService } from '../Services/observice.service';\nimport { UserService } from '../Services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  data : Array<any>\n  constructor(private usersevice: UserService, private observice:ObserviceService) {\n    this.data=new Array<any>();\n  }\n\n  ngOnInit(): void {\n    this.getuserfromservice();\n  }\n  getuserfromservice(){\n    this.data=this.usersevice.users;\n  }\n  obs(){\n    this.observice.creatsub().subscribe(\n      next=>{\n        console.log(next);\n      },\n      error =>{\n        console.log(error);\n      },\n      ()=>{\n        console.log('done');\n      }\n      \n    )\n  }\n  \n}\n\n\n","<table class=\"table table-striped\">\n    <thead>\n        <tr>\n            <th scope=\"col\">username</th>\n            <th scope=\"col\">email</th>\n            <th scope=\"col\">password</th>\n        </tr>\n    </thead>\n    <tbody *ngFor=\"let u of data\">\n        <tr>\n            <td>{{u.username}}</td>\n            <td>{{u.email}}</td>\n            <td>{{u.pwd}}</td>\n        </tr>\n    </tbody>\n</table>\n<button (click)=\"obs()\"> subscribe </button>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../Services/user.service';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'app-resetpwd',\n  templateUrl: './resetpwd.component.html',\n  styleUrls: ['./resetpwd.component.scss']\n})\nexport class ResetpwdComponent implements OnInit {\n  restForm: FormGroup;\n  constructor(private usersevice:UserService,private formbuilder:FormBuilder) { }\n\n  ngOnInit(): void {\n    this.initform();\n  }\n  initform() {\n    this.restForm = this.formbuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n  getpwd(){\n    const formValue = this.restForm.value;\n    console.log(formValue);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 offset-md-3 mt-4\">\n        <h3>Reset Password</h3>\n        <form [formGroup]=\"restForm\">\n            <div class=\"form-group\" >\n                <label for=\"email\">Account Email</label>\n                <input type=\"email\" class=\"form-control\" ngModelname=\"email\" placeholder=\"Enter email\"\n                    formControlName=\"email\">\n            </div>\n\n            <button type=\"submit\" class=\"btn btn-primary\"(click)=\"getpwd()\" [disabled]=\"restForm.invalid\">Reset Password </button>\n        </form>\n    </div>\n</div>","import { Injectable } from '@angular/core';\nimport{HttpClient} from '@angular/common/http'\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class JsonplaceholderService {\n\n  constructor(private Http : HttpClient) { }\n  getdata():Observable<any>{\n    const url=\"http://jsonplaceholder.typicode.com/users\"\n    return this.Http.get<any>(url);\n\n  }\n}\n","import { Injectable } from '@angular/core'\nimport { Observable } from 'rxjs';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ObserviceService {\n  data : Observable <string>\n  constructor() { }\n  creatsub(){\n    this.data =new Observable(obser=>{\n      setTimeout(() => {\n        obser.next(\"amine\")\n      },1000);\n      setTimeout(() => {\n        obser.next(\"bayouli\")\n      },2000);\n      setTimeout(() => {\n        obser.complete();\n      },4000);\n    })\n    return this.data;\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'MiniProjet';\n  isAuth = false;\n  constructor(){}\n  \n}\n","<nav id=\"y\" class=\"navbar navbar-default\">\r\n  <div id=\"r\" class=\"container-fluid\">\r\n    <ul class=\"nav navbar-nav\">\r\n      <li routerLinkActive=\"active\"><a routerLink=\"login\">login</a></li>\r\n      <li routerLinkActive=\"active\"><a routerLink=\"Home\">Home</a></li>\r\n      <li routerLinkActive=\"active\"><a routerLink=\"user\">Utilisateurs</a></li>\r\n      <li routerLinkActive=\"active\"><a routerLink=\"Register\">Register</a></li>\r\n\r\n    </ul>\r\n  </div>\r\n</nav>\r\n<div id=\"h\" class=\"container\">\r\n  <div class=\"row\">\r\n    <router-outlet></router-outlet>\r\n  </div>\r\n</div>","export class AuthService {\r\n\r\n    isAuth = false;\r\n  \r\n    signIn() {\r\n      return new Promise(\r\n        (resolve, reject) => {\r\n          setTimeout(\r\n            () => {\r\n              this.isAuth = true;\r\n              resolve(true);\r\n            }, 2000\r\n          );\r\n        }\r\n      );\r\n    }\r\n  \r\n    signOut() {\r\n      this.isAuth = false;\r\n    }\r\n  }","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './user/user.component';\nimport {HttpClientModule} from '@angular/common/http'\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { UserService } from './Services/user.service';\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ResetpwdComponent } from './resetpwd/resetpwd.component';\nimport { AuthService } from './Services/auth.service';\nimport { HomeComponent } from './home/home.component';\nimport { ObserviceService } from './Services/observice.service';\n\n\nconst appRoutes: Routes = [\n  \n  {path: 'user' ,component:UserComponent},\n  {path: 'login',component:LoginComponent},\n  {path: 'Register',component:RegisterComponent},\n  {path : 'resetpwd', component:ResetpwdComponent},\n  {path : 'Home', component:HomeComponent},\n  {path : '', component:LoginComponent}\n];\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    LoginComponent,\n    RegisterComponent,\n    ResetpwdComponent,\n    HomeComponent,\n    \n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [UserService,AuthService,ObserviceService],\n  bootstrap: [AppComponent,]\n})\nexport class AppModule { }\n","export class User {\r\n    constructor(\r\n      public username:string,\r\n      public email: string,\r\n      public pwd: string,\r\n    ) {}\r\n    \r\n  }","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../Services/auth.service';\nimport { CommonModule } from '@angular/common';\nimport { User } from '../models/user.models';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  authStatus: boolean;\n  public user: User;\n  userForm: FormGroup;\n  constructor(private authService: AuthService, private router: Router, private formbuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.authStatus = this.authService.isAuth;\n    this.initform();\n  }\n  onSignIn() {\n\n    this.authService.signIn().then(\n      () => {\n        //const newLocal = new User({email:\"\",pwd:\"\"});\n        this.authStatus = this.authService.isAuth;\n        this.router.navigate(['user']);\n      }\n    );\n    this.onSubmitForm();\n  }\n\n  onSignOut() {\n    this.authService.signOut();\n    this.authStatus = this.authService.isAuth;\n  }\n  initform() {\n    this.userForm = this.formbuilder.group({\n      pwd: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n\n    });\n  }\n  onSubmitForm() {\n    const formValue = this.userForm.value;\n    const newUser = new User(\n      null,\n      formValue['email'],\n\n      formValue['pwd'],\n\n    );\n    console.log(newUser);\n  }\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 offset-md-3 mt-4\">\n        <h3>Login</h3>\n        <form *ngIf=\"!authStatus\" [formGroup]=\"userForm\">\n            <div class=\"form-group\">\n                <label for=\"loginUsername\">Email</label>\n                <input type=\"text\" class=\"form-control\"   ngModelname=\"email\"  placeholder=\"Enter email\"\n                    formControlName=\"email\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"loginPassword\">Password</label>\n                <input type=\"password\" class=\"form-control\"  ngModel name=\"pwd\" placeholder=\"Password\"\n                    formControlName=\"pwd\">\n            </div>\n            <div class=\"form-group form-check\">\n                <a [routerLink]=\"['/resetpwd']\">Forgot Password</a>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\" (click)=\"onSignIn()\" [disabled]=\"userForm.invalid\">Login\n            </button>\n        </form>\n        <button class=\"btn btn-danger\" *ngIf=\"authStatus\" (click)=\"onSignOut()\">Se déconnecter</button>\n    </div>\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}